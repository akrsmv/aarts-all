Resources:
  airtoursappsyncModulesBEED5E65:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Ref: AssetParameters00f023a0c205c71b9fd109972cf41b97cc7f14fa8f5359bbd7c264d1b01098e9S3Bucket14952211
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters00f023a0c205c71b9fd109972cf41b97cc7f14fa8f5359bbd7c264d1b01098e9S3VersionKeyF1F3E26C
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters00f023a0c205c71b9fd109972cf41b97cc7f14fa8f5359bbd7c264d1b01098e9S3VersionKeyF1F3E26C
      CompatibleRuntimes:
        - nodejs12.x
      Description: A layer holding the libraries needed for the contracts-compliant domain adapter
      LicenseInfo: Apache-2.0
    Metadata:
      aws:cdk:path: AartsAllStack/airtours-appsyncModules/Resource
      aws:asset:path: C:\Users\TechHuddle\Documents\aarts-all\example-app\airtours-appsync\infra\node-modules-layer
      aws:asset:property: Content
  BucketsOperationsBucketEEC1D0FF:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: airtours-appsync-operations-bucket
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - POST
              - PUT
            AllowedOrigins:
              - "*"
            ExposedHeaders:
              - x-amz-server-side-encryption
              - x-amz-request-id
              - x-amz-id-2
              - ETag
            Id: allow_cors
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AartsAllStack/Buckets/OperationsBucket/Resource
  BucketsResourceBucketA851121C:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: airtours-appsync-resource-bucket
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AartsAllStack/Buckets/ResourceBucket/Resource
  DBairtoursappsync6F188FCF:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: meta
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: meta
          AttributeType: S
        - AttributeName: smetadata
          AttributeType: S
        - AttributeName: nmetadata
          AttributeType: "N"
      GlobalSecondaryIndexes:
        - IndexName: meta__smetadata
          KeySchema:
            - AttributeName: meta
              KeyType: HASH
            - AttributeName: smetadata
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: meta__nmetadata
          KeySchema:
            - AttributeName: meta
              KeyType: HASH
            - AttributeName: nmetadata
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: smetadata__meta
          KeySchema:
            - AttributeName: smetadata
              KeyType: HASH
            - AttributeName: meta
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: nmetadata__meta
          KeySchema:
            - AttributeName: nmetadata
              KeyType: HASH
            - AttributeName: meta
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: meta__id
          KeySchema:
            - AttributeName: meta
              KeyType: HASH
            - AttributeName: id
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: airtours-appsync
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AartsAllStack/DB/airtours-appsync/Resource
  EventsBus45DE4339:
    Type: AWS::SNS::Topic
    Metadata:
      aws:cdk:path: AartsAllStack/Events/Bus/Resource
  EventsTestBusCC09F767:
    Type: AWS::SNS::Topic
    Metadata:
      aws:cdk:path: AartsAllStack/Events/TestBus/Resource
  EventsTESTQUEUEF997EE0A:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 172800
    Metadata:
      aws:cdk:path: AartsAllStack/Events/TESTQUEUE/Resource
  EventsTESTQUEUEPolicy38BF01FE:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sqs:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn:
                  Ref: EventsBus45DE4339
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource:
              Fn::GetAtt:
                - EventsTESTQUEUEF997EE0A
                - Arn
        Version: "2012-10-17"
      Queues:
        - Ref: EventsTESTQUEUEF997EE0A
    Metadata:
      aws:cdk:path: AartsAllStack/Events/TESTQUEUE/Policy/Resource
  EventsTESTQUEUEAartsAllStackEventsBusF5B008F00E9A7B3A:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn:
        Ref: EventsBus45DE4339
      Endpoint:
        Fn::GetAtt:
          - EventsTESTQUEUEF997EE0A
          - Arn
      RawMessageDelivery: true
    Metadata:
      aws:cdk:path: AartsAllStack/Events/TESTQUEUE/AartsAllStackEventsBusF5B008F0/Resource
  EventsDispatcherServiceRole4B971D17:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AartsAllStack/Events/Dispatcher/ServiceRole/Resource
  EventsDispatcherServiceRoleDefaultPolicy48471377:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: EventsBus45DE4339
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: EventsTestBusCC09F767
        Version: "2012-10-17"
      PolicyName: EventsDispatcherServiceRoleDefaultPolicy48471377
      Roles:
        - Ref: EventsDispatcherServiceRole4B971D17
    Metadata:
      aws:cdk:path: AartsAllStack/Events/Dispatcher/ServiceRole/DefaultPolicy/Resource
  EventsDispatcher09BE5065:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3Bucket0EC42FD3
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3VersionKey45019697
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3VersionKey45019697
      Handler: index.dispatcher
      Role:
        Fn::GetAtt:
          - EventsDispatcherServiceRole4B971D17
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          EVENT_BUS_TOPIC:
            Ref: EventsBus45DE4339
          TEST_EVENT_BUS_TOPIC:
            Ref: EventsTestBusCC09F767
      FunctionName: airtours-appsync-eventDispatcher
      Layers:
        - Ref: airtoursappsyncModulesBEED5E65
      MemorySize: 256
      Timeout: 10
    DependsOn:
      - EventsDispatcherServiceRoleDefaultPolicy48471377
      - EventsDispatcherServiceRole4B971D17
    Metadata:
      aws:cdk:path: AartsAllStack/Events/Dispatcher/Resource
      aws:asset:path: C:\Users\TechHuddle\Documents\aarts-all\example-app\airtours-appsync\airtours-appsync\dist
      aws:asset:property: Code
  EventsDispatcherEventInvokeConfig393131D0:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: EventsDispatcher09BE5065
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: AartsAllStack/Events/Dispatcher/EventInvokeConfig/Resource
  EventsDispatcherStressTesterServiceRole9FAB05F3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AartsAllStack/Events/DispatcherStressTester/ServiceRole/Resource
  EventsDispatcherStressTesterServiceRoleDefaultPolicy1070617A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: EventsBus45DE4339
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: EventsTestBusCC09F767
        Version: "2012-10-17"
      PolicyName: EventsDispatcherStressTesterServiceRoleDefaultPolicy1070617A
      Roles:
        - Ref: EventsDispatcherStressTesterServiceRole9FAB05F3
    Metadata:
      aws:cdk:path: AartsAllStack/Events/DispatcherStressTester/ServiceRole/DefaultPolicy/Resource
  EventsDispatcherStressTesterC8BE4BAF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3Bucket0EC42FD3
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3VersionKey45019697
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3VersionKey45019697
      Handler: index.dispatcherTester
      Role:
        Fn::GetAtt:
          - EventsDispatcherStressTesterServiceRole9FAB05F3
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          EVENT_BUS_TOPIC:
            Ref: EventsBus45DE4339
          TEST_EVENT_BUS_TOPIC:
            Ref: EventsTestBusCC09F767
      FunctionName: airtours-appsync-eventDispatcherStressTester
      Layers:
        - Ref: airtoursappsyncModulesBEED5E65
      MemorySize: 256
      Timeout: 100
    DependsOn:
      - EventsDispatcherStressTesterServiceRoleDefaultPolicy1070617A
      - EventsDispatcherStressTesterServiceRole9FAB05F3
    Metadata:
      aws:cdk:path: AartsAllStack/Events/DispatcherStressTester/Resource
      aws:asset:path: C:\Users\TechHuddle\Documents\aarts-all\example-app\airtours-appsync\airtours-appsync\dist
      aws:asset:property: Code
  EventsDispatcherStressTesterEventInvokeConfig73219DD5:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: EventsDispatcherStressTesterC8BE4BAF
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: AartsAllStack/Events/DispatcherStressTester/EventInvokeConfig/Resource
  AuthUserPool8115E87F:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
      SmsVerificationMessage: The verification code to your new account is {####}
      UsernameAttributes:
        - email
      UserPoolName: airtours-appsyncUserPool
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    Metadata:
      aws:cdk:path: AartsAllStack/Auth/UserPool/Resource
  AuthUserPoolClient0AA456E4:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: AuthUserPool8115E87F
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      ClientName: UserPoolClientName
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO
    Metadata:
      aws:cdk:path: AartsAllStack/Auth/UserPoolClient/Resource
  AuthIdentityPool12DFB5E1:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId:
            Ref: AuthUserPoolClient0AA456E4
          ProviderName:
            Fn::GetAtt:
              - AuthUserPool8115E87F
              - ProviderName
          ServerSideTokenCheck: true
    Metadata:
      aws:cdk:path: AartsAllStack/Auth/IdentityPool
  AuthDefaultUnauthenticatedRole4BB86F4D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: AuthIdentityPool12DFB5E1
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: unauthenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AartsAllStack/Auth/DefaultUnauthenticatedRole/Resource
  AuthDefaultAuthenticatedRole28CC3415:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: AuthIdentityPool12DFB5E1
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AartsAllStack/Auth/DefaultAuthenticatedRole/Resource
  AuthDefaultAuthenticatedRoleDefaultPolicy3F52EAD4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: cognito-identity:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: AuthDefaultAuthenticatedRoleDefaultPolicy3F52EAD4
      Roles:
        - Ref: AuthDefaultAuthenticatedRole28CC3415
    Metadata:
      aws:cdk:path: AartsAllStack/Auth/DefaultAuthenticatedRole/DefaultPolicy/Resource
  AuthDefaultValidAttachmentB92352E3:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: AuthIdentityPool12DFB5E1
      Roles:
        unauthenticated:
          Fn::GetAtt:
            - AuthDefaultUnauthenticatedRole4BB86F4D
            - Arn
        authenticated:
          Fn::GetAtt:
            - AuthDefaultAuthenticatedRole28CC3415
            - Arn
    Metadata:
      aws:cdk:path: AartsAllStack/Auth/DefaultValidAttachment
  AuthUsersGroupB0CEA1C6:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId:
        Ref: AuthUserPool8115E87F
      GroupName: user
    Metadata:
      aws:cdk:path: AartsAllStack/Auth/UsersGroup
  AuthSuperUsersGroup51FE8A65:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId:
        Ref: AuthUserPool8115E87F
      GroupName: superuser
    Metadata:
      aws:cdk:path: AartsAllStack/Auth/SuperUsersGroup
  AuthAdminsGroup7F4200F2:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId:
        Ref: AuthUserPool8115E87F
      GroupName: admin
    Metadata:
      aws:cdk:path: AartsAllStack/Auth/AdminsGroup
  AppSync04210623:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      Name: airtours-appsyncAppSync
      AdditionalAuthenticationProviders:
        - AuthenticationType: AWS_IAM
      UserPoolConfig:
        AwsRegion:
          Ref: AWS::Region
        DefaultAction: ALLOW
        UserPoolId:
          Ref: AuthUserPool8115E87F
    Metadata:
      aws:cdk:path: AartsAllStack/AppSync/AppSync/Resource
  AppSyncSchema1E096CFA:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSync04210623
          - ApiId
      Definition: >
        

        schema {
            query: Query
            mutation: Mutation
            subscription: Subscription
        }


        type Mutation {
            start(item: String!, payload: AWSJSON): AWSJSON
            create(item: String!, payload: AWSJSON): AWSJSON
            update(item: String!, payload: AWSJSON): AWSJSON
            delete(item: String!, payload: AWSJSON): AWSJSON
            notify(to: String!, body: String!): Notification @aws_iam @aws_cognito_user_pools
        }


        type Query {
            get(item: String!, payload: AWSJSON): AWSJSON 
            list(item: String!, payload: AWSJSON): AWSJSON
        }


        type Subscription {
            inbox(to: String!): Notification @aws_subscribe(mutations: ["notify"])
        }


        type Notification @aws_iam @aws_cognito_user_pools{
            from: String!
            to: String!
            body: String!
            sentAt: String!
        }
    Metadata:
      aws:cdk:path: AartsAllStack/AppSync/AppSync/Schema
  MutationDSServiceRole312B069A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AartsAllStack/Mutation/DS/ServiceRole/Resource
  MutationDSServiceRoleDefaultPolicy220D1924:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - EventsDispatcher09BE5065
                - Arn
        Version: "2012-10-17"
      PolicyName: MutationDSServiceRoleDefaultPolicy220D1924
      Roles:
        - Ref: MutationDSServiceRole312B069A
    Metadata:
      aws:cdk:path: AartsAllStack/Mutation/DS/ServiceRole/DefaultPolicy/Resource
  MutationDSFDDB0869:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSync04210623
          - ApiId
      Name: Lambda
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - EventsDispatcher09BE5065
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - MutationDSServiceRole312B069A
          - Arn
    Metadata:
      aws:cdk:path: AartsAllStack/Mutation/DS/Resource
  MutationDSMutationstartResolverBB99DEA7:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSync04210623
          - ApiId
      FieldName: start
      TypeName: Mutation
      DataSourceName: Lambda
      Kind: UNIT
      RequestMappingTemplate: >-
        {
            "version": "2017-02-28",
            "operation": "Invoke",
            "payload": {
                "action": "start",
                "item": "$context.arguments.item",
                "arguments": $utils.toJson($context.arguments),
                "identity": $utils.toJson($context.identity)
            }
        }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - AppSyncSchema1E096CFA
      - MutationDSFDDB0869
    Metadata:
      aws:cdk:path: AartsAllStack/Mutation/DS/MutationstartResolver/Resource
  MutationDSMutationcreateResolverB93253AF:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSync04210623
          - ApiId
      FieldName: create
      TypeName: Mutation
      DataSourceName: Lambda
      Kind: UNIT
      RequestMappingTemplate: >-
        {
            "version": "2017-02-28",
            "operation": "Invoke",
            "payload": {
                "action": "create",
                "item": "$context.arguments.item",
                "arguments": $utils.toJson($context.arguments),
                "identity": $utils.toJson($context.identity)
            }
        }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - AppSyncSchema1E096CFA
      - MutationDSFDDB0869
    Metadata:
      aws:cdk:path: AartsAllStack/Mutation/DS/MutationcreateResolver/Resource
  MutationDSMutationupdateResolver350E6F53:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSync04210623
          - ApiId
      FieldName: update
      TypeName: Mutation
      DataSourceName: Lambda
      Kind: UNIT
      RequestMappingTemplate: >-
        {
            "version": "2017-02-28",
            "operation": "Invoke",
            "payload": {
                "action": "update",
                "item": "$context.arguments.item",
                "arguments": $utils.toJson($context.arguments),
                "identity": $utils.toJson($context.identity)
            }
        }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - AppSyncSchema1E096CFA
      - MutationDSFDDB0869
    Metadata:
      aws:cdk:path: AartsAllStack/Mutation/DS/MutationupdateResolver/Resource
  MutationDSMutationdeleteResolverFAE10B86:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSync04210623
          - ApiId
      FieldName: delete
      TypeName: Mutation
      DataSourceName: Lambda
      Kind: UNIT
      RequestMappingTemplate: >-
        {
            "version": "2017-02-28",
            "operation": "Invoke",
            "payload": {
                "action": "delete",
                "item": "$context.arguments.item",
                "arguments": $utils.toJson($context.arguments),
                "identity": $utils.toJson($context.identity)
            }
        }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - AppSyncSchema1E096CFA
      - MutationDSFDDB0869
    Metadata:
      aws:cdk:path: AartsAllStack/Mutation/DS/MutationdeleteResolver/Resource
  MutationDSQuerygetResolver30865FF2:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSync04210623
          - ApiId
      FieldName: get
      TypeName: Query
      DataSourceName: Lambda
      Kind: UNIT
      RequestMappingTemplate: >-
        {
            "version": "2017-02-28",
            "operation": "Invoke",
            "payload": {
                "action": "get",
                "item": "$context.arguments.item",
                "arguments": $utils.toJson($context.arguments),
                "identity": $utils.toJson($context.identity)
            }
        }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - AppSyncSchema1E096CFA
      - MutationDSFDDB0869
    Metadata:
      aws:cdk:path: AartsAllStack/Mutation/DS/QuerygetResolver/Resource
  MutationDSQuerylistResolver25E93D0F:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSync04210623
          - ApiId
      FieldName: list
      TypeName: Query
      DataSourceName: Lambda
      Kind: UNIT
      RequestMappingTemplate: >-
        {
            "version": "2017-02-28",
            "operation": "Invoke",
            "payload": {
                "action": "list",
                "item": "$context.arguments.item",
                "arguments": $utils.toJson($context.arguments),
                "identity": $utils.toJson($context.identity)
            }
        }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - AppSyncSchema1E096CFA
      - MutationDSFDDB0869
    Metadata:
      aws:cdk:path: AartsAllStack/Mutation/DS/QuerylistResolver/Resource
  LocalLocalDS4CFE86BD:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSync04210623
          - ApiId
      Name: echo
      Type: NONE
      Description: loopback datasource
    Metadata:
      aws:cdk:path: AartsAllStack/Local/LocalDS
  LocalLocalResolver939E9E6F:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSync04210623
          - ApiId
      FieldName: notify
      TypeName: Mutation
      DataSourceName: echo
      Kind: UNIT
      RequestMappingTemplate: >-
        {

        "version": "2017-02-28",

        "payload": {

        "body": "$util.escapeJavaScript(${context.arguments.body})",

        "from": "${context.identity.username}",

        "to": "${context.arguments.to}",

        "sentAt": "$util.time.nowISO8601()"

        }

        }
      ResponseMappingTemplate: $util.toJson($ctx.result)
    DependsOn:
      - AppSyncSchema1E096CFA
      - LocalLocalDS4CFE86BD
    Metadata:
      aws:cdk:path: AartsAllStack/Local/LocalResolver/Resource
  LocalNotifyDEADLETTERSQS850414AA:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: airtours-appsyncNotifier-DEADLETTER-SQS
    Metadata:
      aws:cdk:path: AartsAllStack/Local/Notify/DEADLETTER-SQS/Resource
  LocalNotifyQueue6F47F0E5:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: airtours-appsyncNotifier
      ReceiveMessageWaitTimeSeconds: 3
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - LocalNotifyDEADLETTERSQS850414AA
            - Arn
        maxReceiveCount: 10
      VisibilityTimeout: 45
    Metadata:
      aws:cdk:path: AartsAllStack/Local/Notify/Queue/Resource
  LocalNotifyQueuePolicyE63F6CF9:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sqs:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn:
                  Ref: EventsBus45DE4339
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource:
              Fn::GetAtt:
                - LocalNotifyQueue6F47F0E5
                - Arn
        Version: "2012-10-17"
      Queues:
        - Ref: LocalNotifyQueue6F47F0E5
    Metadata:
      aws:cdk:path: AartsAllStack/Local/Notify/Queue/Policy/Resource
  LocalNotifyQueueAartsAllStackEventsBusF5B008F09FDF2918:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn:
        Ref: EventsBus45DE4339
      Endpoint:
        Fn::GetAtt:
          - LocalNotifyQueue6F47F0E5
          - Arn
      FilterPolicy:
        eventSource:
          - prefix: worker:output
      RawMessageDelivery: true
    Metadata:
      aws:cdk:path: AartsAllStack/Local/Notify/Queue/AartsAllStackEventsBusF5B008F0/Resource
  LocalNotifyDEADLETTERLAMBDA1C7575B7:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: airtours-appsyncNotifier-DEADLETTER-LAMBDA
    Metadata:
      aws:cdk:path: AartsAllStack/Local/Notify/DEADLETTER-LAMBDA/Resource
  LocalNotifyWorkerServiceRole74450536:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AartsAllStack/Local/Notify/Worker/ServiceRole/Resource
  LocalNotifyWorkerServiceRoleDefaultPolicyEE3CB3C7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sqs:SendMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - LocalNotifyDEADLETTERLAMBDA1C7575B7
                - Arn
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: "*"
          - Action:
              - sqs:ReceiveMessage
              - sqs:ChangeMessageVisibility
              - sqs:GetQueueUrl
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - LocalNotifyQueue6F47F0E5
                - Arn
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: EventsBus45DE4339
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: EventsTestBusCC09F767
          - Action: appsync:GraphQL
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - AppSync04210623
                      - Arn
                  - /types/Mutation/fields/notify
        Version: "2012-10-17"
      PolicyName: LocalNotifyWorkerServiceRoleDefaultPolicyEE3CB3C7
      Roles:
        - Ref: LocalNotifyWorkerServiceRole74450536
    Metadata:
      aws:cdk:path: AartsAllStack/Local/Notify/Worker/ServiceRole/DefaultPolicy/Resource
  LocalNotifyWorkerF5D9547C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3Bucket0EC42FD3
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3VersionKey45019697
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3VersionKey45019697
      Handler: index.notifier
      Role:
        Fn::GetAtt:
          - LocalNotifyWorkerServiceRole74450536
          - Arn
      Runtime: nodejs12.x
      DeadLetterConfig:
        TargetArn:
          Fn::GetAtt:
            - LocalNotifyDEADLETTERLAMBDA1C7575B7
            - Arn
      Environment:
        Variables:
          EVENT_BUS_TOPIC:
            Ref: EventsBus45DE4339
          TEST_EVENT_BUS_TOPIC:
            Ref: EventsTestBusCC09F767
          APPSYNC_ENDPOINT_URL:
            Fn::GetAtt:
              - AppSync04210623
              - GraphQLUrl
      FunctionName: airtours-appsyncNotifier
      Layers:
        - Ref: airtoursappsyncModulesBEED5E65
      MemorySize: 256
      Timeout: 30
      TracingConfig:
        Mode: Active
    DependsOn:
      - LocalNotifyWorkerServiceRoleDefaultPolicyEE3CB3C7
      - LocalNotifyWorkerServiceRole74450536
    Metadata:
      aws:cdk:path: AartsAllStack/Local/Notify/Worker/Resource
      aws:asset:path: C:\Users\TechHuddle\Documents\aarts-all\example-app\airtours-appsync\airtours-appsync\dist
      aws:asset:property: Code
  LocalNotifyWorkerSqsEventSourceAartsAllStackLocalNotifyQueue1FEF9DF0B925BEFC:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        Fn::GetAtt:
          - LocalNotifyQueue6F47F0E5
          - Arn
      FunctionName:
        Ref: LocalNotifyWorkerF5D9547C
      BatchSize: 1
    Metadata:
      aws:cdk:path: AartsAllStack/Local/Notify/Worker/SqsEventSource:AartsAllStackLocalNotifyQueue1FEF9DF0/Resource
  LocalNotifyWorkerEventInvokeConfig1BA051E1:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: LocalNotifyWorkerF5D9547C
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: AartsAllStack/Local/Notify/Worker/EventInvokeConfig/Resource
  airtoursappsyncHandlerDEADLETTERSQSECB0A1AB:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: airtours-appsyncHandler-DEADLETTER-SQS
    Metadata:
      aws:cdk:path: AartsAllStack/airtours-appsyncHandler/DEADLETTER-SQS/Resource
  airtoursappsyncHandlerQueue20B78536:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: airtours-appsyncHandler
      ReceiveMessageWaitTimeSeconds: 3
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - airtoursappsyncHandlerDEADLETTERSQSECB0A1AB
            - Arn
        maxReceiveCount: 10
      VisibilityTimeout: 15
    Metadata:
      aws:cdk:path: AartsAllStack/airtours-appsyncHandler/Queue/Resource
  airtoursappsyncHandlerQueuePolicy494476C1:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sqs:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn:
                  Ref: EventsBus45DE4339
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource:
              Fn::GetAtt:
                - airtoursappsyncHandlerQueue20B78536
                - Arn
        Version: "2012-10-17"
      Queues:
        - Ref: airtoursappsyncHandlerQueue20B78536
    Metadata:
      aws:cdk:path: AartsAllStack/airtours-appsyncHandler/Queue/Policy/Resource
  airtoursappsyncHandlerQueueAartsAllStackEventsBusF5B008F037D72D44:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn:
        Ref: EventsBus45DE4339
      Endpoint:
        Fn::GetAtt:
          - airtoursappsyncHandlerQueue20B78536
          - Arn
      FilterPolicy:
        eventSource:
          - prefix: worker:input
      RawMessageDelivery: true
    Metadata:
      aws:cdk:path: AartsAllStack/airtours-appsyncHandler/Queue/AartsAllStackEventsBusF5B008F0/Resource
  airtoursappsyncHandlerDEADLETTERLAMBDA02C17609:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: airtours-appsyncHandler-DEADLETTER-LAMBDA
    Metadata:
      aws:cdk:path: AartsAllStack/airtours-appsyncHandler/DEADLETTER-LAMBDA/Resource
  airtoursappsyncHandlerWorkerServiceRole43C1DF31:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AartsAllStack/airtours-appsyncHandler/Worker/ServiceRole/Resource
  airtoursappsyncHandlerWorkerServiceRoleDefaultPolicy9FDE7918:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sqs:SendMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - airtoursappsyncHandlerDEADLETTERLAMBDA02C17609
                - Arn
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: "*"
          - Action:
              - sqs:ReceiveMessage
              - sqs:ChangeMessageVisibility
              - sqs:GetQueueUrl
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - airtoursappsyncHandlerQueue20B78536
                - Arn
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: EventsBus45DE4339
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: EventsTestBusCC09F767
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DBairtoursappsync6F188FCF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DBairtoursappsync6F188FCF
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: airtoursappsyncHandlerWorkerServiceRoleDefaultPolicy9FDE7918
      Roles:
        - Ref: airtoursappsyncHandlerWorkerServiceRole43C1DF31
    Metadata:
      aws:cdk:path: AartsAllStack/airtours-appsyncHandler/Worker/ServiceRole/DefaultPolicy/Resource
  airtoursappsyncHandlerWorker3259AE92:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3Bucket0EC42FD3
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3VersionKey45019697
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3VersionKey45019697
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - airtoursappsyncHandlerWorkerServiceRole43C1DF31
          - Arn
      Runtime: nodejs12.x
      DeadLetterConfig:
        TargetArn:
          Fn::GetAtt:
            - airtoursappsyncHandlerDEADLETTERLAMBDA02C17609
            - Arn
      Environment:
        Variables:
          EVENT_BUS_TOPIC:
            Ref: EventsBus45DE4339
          TEST_EVENT_BUS_TOPIC:
            Ref: EventsTestBusCC09F767
          DB_NAME:
            Ref: DBairtoursappsync6F188FCF
          DDB_LOCAL_URL: only used when testing locally
      FunctionName: airtours-appsyncHandler
      Layers:
        - Ref: airtoursappsyncModulesBEED5E65
      MemorySize: 256
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - airtoursappsyncHandlerWorkerServiceRoleDefaultPolicy9FDE7918
      - airtoursappsyncHandlerWorkerServiceRole43C1DF31
    Metadata:
      aws:cdk:path: AartsAllStack/airtours-appsyncHandler/Worker/Resource
      aws:asset:path: C:\Users\TechHuddle\Documents\aarts-all\example-app\airtours-appsync\airtours-appsync\dist
      aws:asset:property: Code
  airtoursappsyncHandlerWorkerSqsEventSourceAartsAllStackairtoursappsyncHandlerQueue026FD056CD53A528:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        Fn::GetAtt:
          - airtoursappsyncHandlerQueue20B78536
          - Arn
      FunctionName:
        Ref: airtoursappsyncHandlerWorker3259AE92
      BatchSize: 1
    Metadata:
      aws:cdk:path: AartsAllStack/airtours-appsyncHandler/Worker/SqsEventSource:AartsAllStackairtoursappsyncHandlerQueue026FD056/Resource
  airtoursappsyncHandlerWorkerEventInvokeConfigDC69043F:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: airtoursappsyncHandlerWorker3259AE92
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: AartsAllStack/airtours-appsyncHandler/Worker/EventInvokeConfig/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.62.0,@aws-cdk/assets=1.62.0,@aws-cdk/aws-apigateway=1.62.0,@aws-cdk/aws-applicationautoscaling=1.62.0,@aws-cdk/aws-appsync=1.62.0,@aws-cdk/aws-autoscaling-common=1.62.0,@aws-cdk/aws-cloudwatch=1.62.0,@aws-cdk/aws-codeguruprofiler=1.62.0,@aws-cdk/aws-cognito=1.62.0,@aws-cdk/aws-dynamodb=1.62.0,@aws-cdk/aws-ec2=1.62.0,@aws-cdk/aws-events=1.62.0,@aws-cdk/aws-iam=1.62.0,@aws-cdk/aws-kms=1.62.0,@aws-cdk/aws-lambda=1.62.0,@aws-cdk/aws-lambda-event-sources=1.62.0,@aws-cdk/aws-logs=1.62.0,@aws-cdk/aws-s3=1.62.0,@aws-cdk/aws-s3-assets=1.62.0,@aws-cdk/aws-s3-notifications=1.62.0,@aws-cdk/aws-sns=1.62.0,@aws-cdk/aws-sns-subscriptions=1.62.0,@aws-cdk/aws-sqs=1.62.0,@aws-cdk/aws-ssm=1.62.0,@aws-cdk/cloud-assembly-schema=1.62.0,@aws-cdk/core=1.62.0,@aws-cdk/custom-resources=1.62.0,@aws-cdk/cx-api=1.62.0,@aws-cdk/region-info=1.62.0,jsii-runtime=node.js/v12.13.0
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters00f023a0c205c71b9fd109972cf41b97cc7f14fa8f5359bbd7c264d1b01098e9S3Bucket14952211:
    Type: String
    Description: S3 bucket for asset "00f023a0c205c71b9fd109972cf41b97cc7f14fa8f5359bbd7c264d1b01098e9"
  AssetParameters00f023a0c205c71b9fd109972cf41b97cc7f14fa8f5359bbd7c264d1b01098e9S3VersionKeyF1F3E26C:
    Type: String
    Description: S3 key for asset version "00f023a0c205c71b9fd109972cf41b97cc7f14fa8f5359bbd7c264d1b01098e9"
  AssetParameters00f023a0c205c71b9fd109972cf41b97cc7f14fa8f5359bbd7c264d1b01098e9ArtifactHash9179D3BB:
    Type: String
    Description: Artifact hash for asset "00f023a0c205c71b9fd109972cf41b97cc7f14fa8f5359bbd7c264d1b01098e9"
  AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3Bucket0EC42FD3:
    Type: String
    Description: S3 bucket for asset "5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdf"
  AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfS3VersionKey45019697:
    Type: String
    Description: S3 key for asset version "5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdf"
  AssetParameters5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdfArtifactHash142D2942:
    Type: String
    Description: Artifact hash for asset "5cf5f654be08ac1836a37f9c298bea5817ab3f5275eda2c02f8abf1b65a64bdf"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

